close all% Comment this line if you have other figures that you dont want close in Matlab

N = 20;
%% A letter map
A = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0
    0 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 0 0 0
    0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0
    0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    ];

%% B letter map
B = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0
    0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0
    0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0
    0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0
    0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0
    0 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    ];

%% C letter map
C = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0
    0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0
    0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0
    0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0
    0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0
    0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    ];

%% after loading .mat file generated by python, run this codes below:
figure
imagesc(abs(original), [0 1.1]);
set(gcf,  'Position', [00, 00, 350, 300])
set(gca,  'FontSize', 10)% Font Size
colormap autumn
colorbar
title('Laser Array Intensity Distribution')

phase = HelperClass.quantizePhase2(angle(original));
figure
imagesc(phase, [-pi pi]);
set(gcf,  'Position', [00, 00, 350, 300])
set(gca,  'FontSize', 10)% Font Size
colormap jet
colorbar
title('Laser Array Quantized Phase Distribution')


%% Then copy the quantized near field phase to python or matlab (below) to calculate the far field

nearField = abs(original) .* (exp(1i * phase));
Angular_Spectrum = (fft2(fftshift(original))); %Near Field
figure
imagesc(abs(Angular_Spectrum).^2);
set(gcf, 'Position', [00, 00, 350, 300])
set(gca, 'FontSize', 10)% Font Size
colormap jet
colorbar
title('Recovered Far Field Image')

%% 

dX = phase - [phase(:, 2:N) zeros(N, 1)];
dY = phase - [phase(2:N, :); zeros(1, N)];

figure;
imagesc(dX, [-pi pi])
colormap jet
colorbar

figure
imagesc(dY, [-pi pi])
colormap jet
colorbar
